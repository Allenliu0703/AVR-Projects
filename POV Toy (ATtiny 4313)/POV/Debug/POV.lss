
POV.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000ee  00800060  000003fc  00000490  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  0080014e  0080014e  0000057e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000057e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  000005f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000881  00000000  00000000  00000628  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000001b4  00000000  00000000  00000ea9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000001c3  00000000  00000000  0000105d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000074  00000000  00000000  00001220  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000001c5  00000000  00000000  00001294  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000045b  00000000  00000000  00001459  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  000018b4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	14 c0       	rjmp	.+40     	; 0x2a <__ctors_end>
   2:	2e c0       	rjmp	.+92     	; 0x60 <__bad_interrupt>
   4:	2d c0       	rjmp	.+90     	; 0x60 <__bad_interrupt>
   6:	2c c0       	rjmp	.+88     	; 0x60 <__bad_interrupt>
   8:	2b c0       	rjmp	.+86     	; 0x60 <__bad_interrupt>
   a:	2a c0       	rjmp	.+84     	; 0x60 <__bad_interrupt>
   c:	29 c0       	rjmp	.+82     	; 0x60 <__bad_interrupt>
   e:	28 c0       	rjmp	.+80     	; 0x60 <__bad_interrupt>
  10:	27 c0       	rjmp	.+78     	; 0x60 <__bad_interrupt>
  12:	26 c0       	rjmp	.+76     	; 0x60 <__bad_interrupt>
  14:	25 c0       	rjmp	.+74     	; 0x60 <__bad_interrupt>
  16:	24 c0       	rjmp	.+72     	; 0x60 <__bad_interrupt>
  18:	23 c0       	rjmp	.+70     	; 0x60 <__bad_interrupt>
  1a:	22 c0       	rjmp	.+68     	; 0x60 <__bad_interrupt>
  1c:	21 c0       	rjmp	.+66     	; 0x60 <__bad_interrupt>
  1e:	20 c0       	rjmp	.+64     	; 0x60 <__bad_interrupt>
  20:	1f c0       	rjmp	.+62     	; 0x60 <__bad_interrupt>
  22:	1e c0       	rjmp	.+60     	; 0x60 <__bad_interrupt>
  24:	1d c0       	rjmp	.+58     	; 0x60 <__bad_interrupt>
  26:	1c c0       	rjmp	.+56     	; 0x60 <__bad_interrupt>
  28:	1b c0       	rjmp	.+54     	; 0x60 <__bad_interrupt>

0000002a <__ctors_end>:
  2a:	11 24       	eor	r1, r1
  2c:	1f be       	out	0x3f, r1	; 63
  2e:	cf e5       	ldi	r28, 0x5F	; 95
  30:	d1 e0       	ldi	r29, 0x01	; 1
  32:	de bf       	out	0x3e, r29	; 62
  34:	cd bf       	out	0x3d, r28	; 61

00000036 <__do_copy_data>:
  36:	11 e0       	ldi	r17, 0x01	; 1
  38:	a0 e6       	ldi	r26, 0x60	; 96
  3a:	b0 e0       	ldi	r27, 0x00	; 0
  3c:	ec ef       	ldi	r30, 0xFC	; 252
  3e:	f3 e0       	ldi	r31, 0x03	; 3
  40:	02 c0       	rjmp	.+4      	; 0x46 <__SREG__+0x7>
  42:	05 90       	lpm	r0, Z+
  44:	0d 92       	st	X+, r0
  46:	ae 34       	cpi	r26, 0x4E	; 78
  48:	b1 07       	cpc	r27, r17
  4a:	d9 f7       	brne	.-10     	; 0x42 <__SREG__+0x3>

0000004c <__do_clear_bss>:
  4c:	21 e0       	ldi	r18, 0x01	; 1
  4e:	ae e4       	ldi	r26, 0x4E	; 78
  50:	b1 e0       	ldi	r27, 0x01	; 1
  52:	01 c0       	rjmp	.+2      	; 0x56 <.do_clear_bss_start>

00000054 <.do_clear_bss_loop>:
  54:	1d 92       	st	X+, r1

00000056 <.do_clear_bss_start>:
  56:	a0 35       	cpi	r26, 0x50	; 80
  58:	b2 07       	cpc	r27, r18
  5a:	e1 f7       	brne	.-8      	; 0x54 <.do_clear_bss_loop>
  5c:	c1 d1       	rcall	.+898    	; 0x3e0 <main>
  5e:	cc c1       	rjmp	.+920    	; 0x3f8 <_exit>

00000060 <__bad_interrupt>:
  60:	cf cf       	rjmp	.-98     	; 0x0 <__vectors>

00000062 <POVDisplay>:
uint8_t Brick[8]={0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111};
void DisplayChar(char x);
void POVDisplay(uint8_t array[], int size);
void DisplayString(char* s);
void POVDisplay(uint8_t array[], int size){
	for (int i=0; i< size; i++){
  62:	16 16       	cp	r1, r22
  64:	17 06       	cpc	r1, r23
  66:	74 f4       	brge	.+28     	; 0x84 <POVDisplay+0x22>
  68:	fc 01       	movw	r30, r24
  6a:	68 0f       	add	r22, r24
  6c:	79 1f       	adc	r23, r25
		PORTB = *(array+i);
  6e:	91 91       	ld	r25, Z+
  70:	98 bb       	out	0x18, r25	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  72:	83 ef       	ldi	r24, 0xF3	; 243
  74:	91 e0       	ldi	r25, 0x01	; 1
  76:	01 97       	sbiw	r24, 0x01	; 1
  78:	f1 f7       	brne	.-4      	; 0x76 <POVDisplay+0x14>
  7a:	00 c0       	rjmp	.+0      	; 0x7c <POVDisplay+0x1a>
  7c:	00 00       	nop
uint8_t Brick[8]={0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111};
void DisplayChar(char x);
void POVDisplay(uint8_t array[], int size);
void DisplayString(char* s);
void POVDisplay(uint8_t array[], int size){
	for (int i=0; i< size; i++){
  7e:	e6 17       	cp	r30, r22
  80:	f7 07       	cpc	r31, r23
  82:	a9 f7       	brne	.-22     	; 0x6e <POVDisplay+0xc>
  84:	08 95       	ret

00000086 <DisplayChar>:
		dotdelay;
	}
}
void DisplayChar(char x)
{
	if(x == 'A'){
  86:	81 34       	cpi	r24, 0x41	; 65
  88:	61 f4       	brne	.+24     	; 0xa2 <DisplayChar+0x1c>
		size = sizeof(A);
  8a:	88 e0       	ldi	r24, 0x08	; 8
  8c:	90 e0       	ldi	r25, 0x00	; 0
  8e:	90 93 4f 01 	sts	0x014F, r25
  92:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(A, size);
  96:	68 e0       	ldi	r22, 0x08	; 8
  98:	70 e0       	ldi	r23, 0x00	; 0
  9a:	89 e3       	ldi	r24, 0x39	; 57
  9c:	91 e0       	ldi	r25, 0x01	; 1
  9e:	e1 df       	rcall	.-62     	; 0x62 <POVDisplay>
  a0:	77 c1       	rjmp	.+750    	; 0x390 <__stack+0x231>
	}else if (x == 'B'){
  a2:	82 34       	cpi	r24, 0x42	; 66
  a4:	61 f4       	brne	.+24     	; 0xbe <DisplayChar+0x38>
		size = sizeof(B);
  a6:	88 e0       	ldi	r24, 0x08	; 8
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	90 93 4f 01 	sts	0x014F, r25
  ae:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(B, size);
  b2:	68 e0       	ldi	r22, 0x08	; 8
  b4:	70 e0       	ldi	r23, 0x00	; 0
  b6:	81 e3       	ldi	r24, 0x31	; 49
  b8:	91 e0       	ldi	r25, 0x01	; 1
  ba:	d3 df       	rcall	.-90     	; 0x62 <POVDisplay>
  bc:	69 c1       	rjmp	.+722    	; 0x390 <__stack+0x231>
	}else if (x == 'C'){
  be:	83 34       	cpi	r24, 0x43	; 67
  c0:	61 f4       	brne	.+24     	; 0xda <DisplayChar+0x54>
		size = sizeof(C);
  c2:	88 e0       	ldi	r24, 0x08	; 8
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	90 93 4f 01 	sts	0x014F, r25
  ca:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(C, size);
  ce:	68 e0       	ldi	r22, 0x08	; 8
  d0:	70 e0       	ldi	r23, 0x00	; 0
  d2:	89 e2       	ldi	r24, 0x29	; 41
  d4:	91 e0       	ldi	r25, 0x01	; 1
  d6:	c5 df       	rcall	.-118    	; 0x62 <POVDisplay>
  d8:	5b c1       	rjmp	.+694    	; 0x390 <__stack+0x231>
	}else if (x == 'D'){
  da:	84 34       	cpi	r24, 0x44	; 68
  dc:	61 f4       	brne	.+24     	; 0xf6 <DisplayChar+0x70>
		size = sizeof(D);
  de:	88 e0       	ldi	r24, 0x08	; 8
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	90 93 4f 01 	sts	0x014F, r25
  e6:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(D, size);
  ea:	68 e0       	ldi	r22, 0x08	; 8
  ec:	70 e0       	ldi	r23, 0x00	; 0
  ee:	81 e2       	ldi	r24, 0x21	; 33
  f0:	91 e0       	ldi	r25, 0x01	; 1
  f2:	b7 df       	rcall	.-146    	; 0x62 <POVDisplay>
  f4:	4d c1       	rjmp	.+666    	; 0x390 <__stack+0x231>
	}else if (x == 'E'){
  f6:	85 34       	cpi	r24, 0x45	; 69
  f8:	61 f4       	brne	.+24     	; 0x112 <DisplayChar+0x8c>
		size = sizeof(E);
  fa:	88 e0       	ldi	r24, 0x08	; 8
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	90 93 4f 01 	sts	0x014F, r25
 102:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(E, size);
 106:	68 e0       	ldi	r22, 0x08	; 8
 108:	70 e0       	ldi	r23, 0x00	; 0
 10a:	89 e1       	ldi	r24, 0x19	; 25
 10c:	91 e0       	ldi	r25, 0x01	; 1
 10e:	a9 df       	rcall	.-174    	; 0x62 <POVDisplay>
 110:	3f c1       	rjmp	.+638    	; 0x390 <__stack+0x231>
	}else if (x == 'F'){
 112:	86 34       	cpi	r24, 0x46	; 70
 114:	61 f4       	brne	.+24     	; 0x12e <DisplayChar+0xa8>
		size = sizeof(F);
 116:	88 e0       	ldi	r24, 0x08	; 8
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	90 93 4f 01 	sts	0x014F, r25
 11e:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(F, size);
 122:	68 e0       	ldi	r22, 0x08	; 8
 124:	70 e0       	ldi	r23, 0x00	; 0
 126:	81 e1       	ldi	r24, 0x11	; 17
 128:	91 e0       	ldi	r25, 0x01	; 1
 12a:	9b df       	rcall	.-202    	; 0x62 <POVDisplay>
 12c:	31 c1       	rjmp	.+610    	; 0x390 <__stack+0x231>
	}else if (x == 'G'){
 12e:	87 34       	cpi	r24, 0x47	; 71
 130:	61 f4       	brne	.+24     	; 0x14a <DisplayChar+0xc4>
		size = sizeof(G);
 132:	88 e0       	ldi	r24, 0x08	; 8
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	90 93 4f 01 	sts	0x014F, r25
 13a:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(G, size);
 13e:	68 e0       	ldi	r22, 0x08	; 8
 140:	70 e0       	ldi	r23, 0x00	; 0
 142:	89 e0       	ldi	r24, 0x09	; 9
 144:	91 e0       	ldi	r25, 0x01	; 1
 146:	8d df       	rcall	.-230    	; 0x62 <POVDisplay>
 148:	23 c1       	rjmp	.+582    	; 0x390 <__stack+0x231>
	}else if (x == 'H'){
 14a:	88 34       	cpi	r24, 0x48	; 72
 14c:	61 f4       	brne	.+24     	; 0x166 <__stack+0x7>
		size = sizeof(H);
 14e:	88 e0       	ldi	r24, 0x08	; 8
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	90 93 4f 01 	sts	0x014F, r25
 156:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(H, size);
 15a:	68 e0       	ldi	r22, 0x08	; 8
 15c:	70 e0       	ldi	r23, 0x00	; 0
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	91 e0       	ldi	r25, 0x01	; 1
 162:	7f df       	rcall	.-258    	; 0x62 <POVDisplay>
 164:	15 c1       	rjmp	.+554    	; 0x390 <__stack+0x231>
	}else if (x == 'I'){
 166:	89 34       	cpi	r24, 0x49	; 73
 168:	61 f4       	brne	.+24     	; 0x182 <__stack+0x23>
		size = sizeof(I);
 16a:	88 e0       	ldi	r24, 0x08	; 8
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	90 93 4f 01 	sts	0x014F, r25
 172:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(I, size);
 176:	68 e0       	ldi	r22, 0x08	; 8
 178:	70 e0       	ldi	r23, 0x00	; 0
 17a:	89 ef       	ldi	r24, 0xF9	; 249
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	71 df       	rcall	.-286    	; 0x62 <POVDisplay>
 180:	07 c1       	rjmp	.+526    	; 0x390 <__stack+0x231>
	}else if (x == 'J'){
 182:	8a 34       	cpi	r24, 0x4A	; 74
 184:	61 f4       	brne	.+24     	; 0x19e <__stack+0x3f>
		size = sizeof(J);
 186:	88 e0       	ldi	r24, 0x08	; 8
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	90 93 4f 01 	sts	0x014F, r25
 18e:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(J, size);
 192:	68 e0       	ldi	r22, 0x08	; 8
 194:	70 e0       	ldi	r23, 0x00	; 0
 196:	81 ef       	ldi	r24, 0xF1	; 241
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	63 df       	rcall	.-314    	; 0x62 <POVDisplay>
 19c:	f9 c0       	rjmp	.+498    	; 0x390 <__stack+0x231>
	}else if (x == 'K'){
 19e:	8b 34       	cpi	r24, 0x4B	; 75
 1a0:	61 f4       	brne	.+24     	; 0x1ba <__stack+0x5b>
		size = sizeof(K);
 1a2:	88 e0       	ldi	r24, 0x08	; 8
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	90 93 4f 01 	sts	0x014F, r25
 1aa:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(K, size);
 1ae:	68 e0       	ldi	r22, 0x08	; 8
 1b0:	70 e0       	ldi	r23, 0x00	; 0
 1b2:	89 ee       	ldi	r24, 0xE9	; 233
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	55 df       	rcall	.-342    	; 0x62 <POVDisplay>
 1b8:	eb c0       	rjmp	.+470    	; 0x390 <__stack+0x231>
	}else if (x == 'L'){
 1ba:	8c 34       	cpi	r24, 0x4C	; 76
 1bc:	61 f4       	brne	.+24     	; 0x1d6 <__stack+0x77>
		size = sizeof(L);
 1be:	88 e0       	ldi	r24, 0x08	; 8
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	90 93 4f 01 	sts	0x014F, r25
 1c6:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(L, size);
 1ca:	68 e0       	ldi	r22, 0x08	; 8
 1cc:	70 e0       	ldi	r23, 0x00	; 0
 1ce:	81 ee       	ldi	r24, 0xE1	; 225
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	47 df       	rcall	.-370    	; 0x62 <POVDisplay>
 1d4:	dd c0       	rjmp	.+442    	; 0x390 <__stack+0x231>
	}else if (x == 'M'){
 1d6:	8d 34       	cpi	r24, 0x4D	; 77
 1d8:	61 f4       	brne	.+24     	; 0x1f2 <__stack+0x93>
		size = sizeof(M);
 1da:	88 e0       	ldi	r24, 0x08	; 8
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	90 93 4f 01 	sts	0x014F, r25
 1e2:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(M, size);
 1e6:	68 e0       	ldi	r22, 0x08	; 8
 1e8:	70 e0       	ldi	r23, 0x00	; 0
 1ea:	89 ed       	ldi	r24, 0xD9	; 217
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	39 df       	rcall	.-398    	; 0x62 <POVDisplay>
 1f0:	cf c0       	rjmp	.+414    	; 0x390 <__stack+0x231>
	}else if (x == 'N'){
 1f2:	8e 34       	cpi	r24, 0x4E	; 78
 1f4:	61 f4       	brne	.+24     	; 0x20e <__stack+0xaf>
		size = sizeof(N);
 1f6:	88 e0       	ldi	r24, 0x08	; 8
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	90 93 4f 01 	sts	0x014F, r25
 1fe:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(N, size);
 202:	68 e0       	ldi	r22, 0x08	; 8
 204:	70 e0       	ldi	r23, 0x00	; 0
 206:	81 ed       	ldi	r24, 0xD1	; 209
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	2b df       	rcall	.-426    	; 0x62 <POVDisplay>
 20c:	c1 c0       	rjmp	.+386    	; 0x390 <__stack+0x231>
	}else if (x == 'O'){
 20e:	8f 34       	cpi	r24, 0x4F	; 79
 210:	61 f4       	brne	.+24     	; 0x22a <__stack+0xcb>
		size = sizeof(O);
 212:	88 e0       	ldi	r24, 0x08	; 8
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	90 93 4f 01 	sts	0x014F, r25
 21a:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(O, size);
 21e:	68 e0       	ldi	r22, 0x08	; 8
 220:	70 e0       	ldi	r23, 0x00	; 0
 222:	89 ec       	ldi	r24, 0xC9	; 201
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	1d df       	rcall	.-454    	; 0x62 <POVDisplay>
 228:	b3 c0       	rjmp	.+358    	; 0x390 <__stack+0x231>
	}else if (x == 'P'){
 22a:	80 35       	cpi	r24, 0x50	; 80
 22c:	61 f4       	brne	.+24     	; 0x246 <__stack+0xe7>
		size = sizeof(P);
 22e:	88 e0       	ldi	r24, 0x08	; 8
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	90 93 4f 01 	sts	0x014F, r25
 236:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(P, size);
 23a:	68 e0       	ldi	r22, 0x08	; 8
 23c:	70 e0       	ldi	r23, 0x00	; 0
 23e:	81 ec       	ldi	r24, 0xC1	; 193
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	0f df       	rcall	.-482    	; 0x62 <POVDisplay>
 244:	a5 c0       	rjmp	.+330    	; 0x390 <__stack+0x231>
	}else if (x == 'Q'){
 246:	81 35       	cpi	r24, 0x51	; 81
 248:	61 f4       	brne	.+24     	; 0x262 <__stack+0x103>
		size = sizeof(Q);
 24a:	88 e0       	ldi	r24, 0x08	; 8
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	90 93 4f 01 	sts	0x014F, r25
 252:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(Q, size);
 256:	68 e0       	ldi	r22, 0x08	; 8
 258:	70 e0       	ldi	r23, 0x00	; 0
 25a:	89 eb       	ldi	r24, 0xB9	; 185
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	01 df       	rcall	.-510    	; 0x62 <POVDisplay>
 260:	97 c0       	rjmp	.+302    	; 0x390 <__stack+0x231>
	}else if (x == 'R'){
 262:	82 35       	cpi	r24, 0x52	; 82
 264:	61 f4       	brne	.+24     	; 0x27e <__stack+0x11f>
		size = sizeof(R);
 266:	88 e0       	ldi	r24, 0x08	; 8
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	90 93 4f 01 	sts	0x014F, r25
 26e:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(R, size);
 272:	68 e0       	ldi	r22, 0x08	; 8
 274:	70 e0       	ldi	r23, 0x00	; 0
 276:	81 eb       	ldi	r24, 0xB1	; 177
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	f3 de       	rcall	.-538    	; 0x62 <POVDisplay>
 27c:	89 c0       	rjmp	.+274    	; 0x390 <__stack+0x231>
	}else if (x == 'S'){
 27e:	83 35       	cpi	r24, 0x53	; 83
 280:	61 f4       	brne	.+24     	; 0x29a <__stack+0x13b>
		size = sizeof(S);
 282:	88 e0       	ldi	r24, 0x08	; 8
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	90 93 4f 01 	sts	0x014F, r25
 28a:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(S, size);
 28e:	68 e0       	ldi	r22, 0x08	; 8
 290:	70 e0       	ldi	r23, 0x00	; 0
 292:	89 ea       	ldi	r24, 0xA9	; 169
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	e5 de       	rcall	.-566    	; 0x62 <POVDisplay>
 298:	7b c0       	rjmp	.+246    	; 0x390 <__stack+0x231>
	}else if (x == 'T'){
 29a:	84 35       	cpi	r24, 0x54	; 84
 29c:	61 f4       	brne	.+24     	; 0x2b6 <__stack+0x157>
		size = sizeof(T);
 29e:	88 e0       	ldi	r24, 0x08	; 8
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	90 93 4f 01 	sts	0x014F, r25
 2a6:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(T, size);
 2aa:	68 e0       	ldi	r22, 0x08	; 8
 2ac:	70 e0       	ldi	r23, 0x00	; 0
 2ae:	81 ea       	ldi	r24, 0xA1	; 161
 2b0:	90 e0       	ldi	r25, 0x00	; 0
 2b2:	d7 de       	rcall	.-594    	; 0x62 <POVDisplay>
 2b4:	6d c0       	rjmp	.+218    	; 0x390 <__stack+0x231>
	}else if (x == 'U'){
 2b6:	85 35       	cpi	r24, 0x55	; 85
 2b8:	61 f4       	brne	.+24     	; 0x2d2 <__stack+0x173>
		size = sizeof(U);
 2ba:	88 e0       	ldi	r24, 0x08	; 8
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	90 93 4f 01 	sts	0x014F, r25
 2c2:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(U, size);
 2c6:	68 e0       	ldi	r22, 0x08	; 8
 2c8:	70 e0       	ldi	r23, 0x00	; 0
 2ca:	89 e9       	ldi	r24, 0x99	; 153
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	c9 de       	rcall	.-622    	; 0x62 <POVDisplay>
 2d0:	5f c0       	rjmp	.+190    	; 0x390 <__stack+0x231>
	}else if (x == 'V'){
 2d2:	86 35       	cpi	r24, 0x56	; 86
 2d4:	61 f4       	brne	.+24     	; 0x2ee <__stack+0x18f>
		size = sizeof(V);
 2d6:	88 e0       	ldi	r24, 0x08	; 8
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	90 93 4f 01 	sts	0x014F, r25
 2de:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(V, size);
 2e2:	68 e0       	ldi	r22, 0x08	; 8
 2e4:	70 e0       	ldi	r23, 0x00	; 0
 2e6:	81 e9       	ldi	r24, 0x91	; 145
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	bb de       	rcall	.-650    	; 0x62 <POVDisplay>
 2ec:	51 c0       	rjmp	.+162    	; 0x390 <__stack+0x231>
	}else if (x == 'W'){
 2ee:	87 35       	cpi	r24, 0x57	; 87
 2f0:	61 f4       	brne	.+24     	; 0x30a <__stack+0x1ab>
		size = sizeof(W);
 2f2:	88 e0       	ldi	r24, 0x08	; 8
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	90 93 4f 01 	sts	0x014F, r25
 2fa:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(W, size);
 2fe:	68 e0       	ldi	r22, 0x08	; 8
 300:	70 e0       	ldi	r23, 0x00	; 0
 302:	89 e8       	ldi	r24, 0x89	; 137
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	ad de       	rcall	.-678    	; 0x62 <POVDisplay>
 308:	43 c0       	rjmp	.+134    	; 0x390 <__stack+0x231>
	}else if (x == 'X'){
 30a:	88 35       	cpi	r24, 0x58	; 88
 30c:	61 f4       	brne	.+24     	; 0x326 <__stack+0x1c7>
		size = sizeof(X);
 30e:	88 e0       	ldi	r24, 0x08	; 8
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	90 93 4f 01 	sts	0x014F, r25
 316:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(X, size);
 31a:	68 e0       	ldi	r22, 0x08	; 8
 31c:	70 e0       	ldi	r23, 0x00	; 0
 31e:	81 e8       	ldi	r24, 0x81	; 129
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	9f de       	rcall	.-706    	; 0x62 <POVDisplay>
 324:	35 c0       	rjmp	.+106    	; 0x390 <__stack+0x231>
	}else if (x == 'Y'){
 326:	89 35       	cpi	r24, 0x59	; 89
 328:	61 f4       	brne	.+24     	; 0x342 <__stack+0x1e3>
		size = sizeof(Y);
 32a:	88 e0       	ldi	r24, 0x08	; 8
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	90 93 4f 01 	sts	0x014F, r25
 332:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(Y, size);
 336:	68 e0       	ldi	r22, 0x08	; 8
 338:	70 e0       	ldi	r23, 0x00	; 0
 33a:	89 e7       	ldi	r24, 0x79	; 121
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	91 de       	rcall	.-734    	; 0x62 <POVDisplay>
 340:	27 c0       	rjmp	.+78     	; 0x390 <__stack+0x231>
	}else if (x == 'Z'){
 342:	8a 35       	cpi	r24, 0x5A	; 90
 344:	61 f4       	brne	.+24     	; 0x35e <__stack+0x1ff>
		size = sizeof(Z);
 346:	88 e0       	ldi	r24, 0x08	; 8
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	90 93 4f 01 	sts	0x014F, r25
 34e:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(Z, size);
 352:	68 e0       	ldi	r22, 0x08	; 8
 354:	70 e0       	ldi	r23, 0x00	; 0
 356:	81 e7       	ldi	r24, 0x71	; 113
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	83 de       	rcall	.-762    	; 0x62 <POVDisplay>
 35c:	19 c0       	rjmp	.+50     	; 0x390 <__stack+0x231>
	}else if (x == '@'){
 35e:	80 34       	cpi	r24, 0x40	; 64
 360:	61 f4       	brne	.+24     	; 0x37a <__stack+0x21b>
		size = sizeof(Heart);
 362:	89 e0       	ldi	r24, 0x09	; 9
 364:	90 e0       	ldi	r25, 0x00	; 0
 366:	90 93 4f 01 	sts	0x014F, r25
 36a:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(Heart, size);
 36e:	69 e0       	ldi	r22, 0x09	; 9
 370:	70 e0       	ldi	r23, 0x00	; 0
 372:	88 e6       	ldi	r24, 0x68	; 104
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	75 de       	rcall	.-790    	; 0x62 <POVDisplay>
 378:	0b c0       	rjmp	.+22     	; 0x390 <__stack+0x231>
	}else{
		size = sizeof(Brick);
 37a:	88 e0       	ldi	r24, 0x08	; 8
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	90 93 4f 01 	sts	0x014F, r25
 382:	80 93 4e 01 	sts	0x014E, r24
		POVDisplay(Brick, size);
 386:	68 e0       	ldi	r22, 0x08	; 8
 388:	70 e0       	ldi	r23, 0x00	; 0
 38a:	80 e6       	ldi	r24, 0x60	; 96
 38c:	90 e0       	ldi	r25, 0x00	; 0
 38e:	69 de       	rcall	.-814    	; 0x62 <POVDisplay>
	}
	POVClear;
 390:	18 ba       	out	0x18, r1	; 24
 392:	83 ec       	ldi	r24, 0xC3	; 195
 394:	99 e0       	ldi	r25, 0x09	; 9
 396:	01 97       	sbiw	r24, 0x01	; 1
 398:	f1 f7       	brne	.-4      	; 0x396 <__stack+0x237>
 39a:	00 c0       	rjmp	.+0      	; 0x39c <__stack+0x23d>
 39c:	00 00       	nop
 39e:	08 95       	ret

000003a0 <DisplayString>:
	chardelay;
}
void DisplayString(char* s){
 3a0:	ef 92       	push	r14
 3a2:	ff 92       	push	r15
 3a4:	0f 93       	push	r16
 3a6:	1f 93       	push	r17
 3a8:	cf 93       	push	r28
 3aa:	df 93       	push	r29
 3ac:	8c 01       	movw	r16, r24
 3ae:	7c 01       	movw	r14, r24
	for (int i =0; i <= strlen(s); i++ )
 3b0:	c0 e0       	ldi	r28, 0x00	; 0
 3b2:	d0 e0       	ldi	r29, 0x00	; 0
	{
		DisplayChar(s[i]);
 3b4:	f7 01       	movw	r30, r14
 3b6:	81 91       	ld	r24, Z+
 3b8:	7f 01       	movw	r14, r30
 3ba:	65 de       	rcall	.-822    	; 0x86 <DisplayChar>
	}
	POVClear;
	chardelay;
}
void DisplayString(char* s){
	for (int i =0; i <= strlen(s); i++ )
 3bc:	21 96       	adiw	r28, 0x01	; 1
 3be:	f8 01       	movw	r30, r16
 3c0:	01 90       	ld	r0, Z+
 3c2:	00 20       	and	r0, r0
 3c4:	e9 f7       	brne	.-6      	; 0x3c0 <DisplayString+0x20>
 3c6:	31 97       	sbiw	r30, 0x01	; 1
 3c8:	e0 1b       	sub	r30, r16
 3ca:	f1 0b       	sbc	r31, r17
 3cc:	ec 17       	cp	r30, r28
 3ce:	fd 07       	cpc	r31, r29
 3d0:	88 f7       	brcc	.-30     	; 0x3b4 <DisplayString+0x14>
	{
		DisplayChar(s[i]);
	}
}
 3d2:	df 91       	pop	r29
 3d4:	cf 91       	pop	r28
 3d6:	1f 91       	pop	r17
 3d8:	0f 91       	pop	r16
 3da:	ff 90       	pop	r15
 3dc:	ef 90       	pop	r14
 3de:	08 95       	ret

000003e0 <main>:
int main(void)
{

	DDRB |= 0xFF;
 3e0:	87 b3       	in	r24, 0x17	; 23
 3e2:	8f ef       	ldi	r24, 0xFF	; 255
 3e4:	87 bb       	out	0x17, r24	; 23
    while (1) 
    {
		DisplayString("ALLEN");
 3e6:	81 e4       	ldi	r24, 0x41	; 65
 3e8:	91 e0       	ldi	r25, 0x01	; 1
 3ea:	da df       	rcall	.-76     	; 0x3a0 <DisplayString>
		DisplayChar('@');
 3ec:	80 e4       	ldi	r24, 0x40	; 64
 3ee:	4b de       	rcall	.-874    	; 0x86 <DisplayChar>
		DisplayString("DORIS");
 3f0:	87 e4       	ldi	r24, 0x47	; 71
 3f2:	91 e0       	ldi	r25, 0x01	; 1
 3f4:	d5 df       	rcall	.-86     	; 0x3a0 <DisplayString>
    }
 3f6:	f7 cf       	rjmp	.-18     	; 0x3e6 <main+0x6>

000003f8 <_exit>:
 3f8:	f8 94       	cli

000003fa <__stop_program>:
 3fa:	ff cf       	rjmp	.-2      	; 0x3fa <__stop_program>
